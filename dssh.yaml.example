apiVersion: v1
kind: ConfigMap
metadata:
    name: root-ssh-pubkeys
    namespace: kube-system
data:
    mykey1: "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCagK9ZjexjQrxmCvQpPm4Da7qM9tQ/ldqAHqbORTqkZbARRm8ASkBYFP8de4+y+K/BxV2iNDo/A/0Jkaw7uJSrH645vWzCbeX2S+qQMaQp2C7HE4aua8pwjL5d1q/YnU/tiznq2Lf74BTp4/mrl4pcmOTZdlUOa/tTN0ZZlZas0+KW9dr9cn4X78HT6n7vN0TOuQQMWTsw1aFxgdNMUDf6as7Z+RzILdG5J7G7QjFBbRzcj/yaRZGpmpaPvP+KV8J+8KsnjvoMNJuvBYQapWqZqv1yUqN45J2UQ9vvJ7H/p2u8+lYvGZ0wVbRB7PTHnsR8bOSW1f0BPoMDWkW+9ZCN user1@hostname"
    mykey2: "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIMQWiTqUTFVUMASTPpWLd+tYqQD1BW3AKCZfaczsQvP5 user2@hostname"
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: ssh-manager
  namespace: kube-system
spec:
  selector:
    matchLabels:
     app: ssh-manager
  template:
    metadata:
      labels:
        app: ssh-manager
    spec:
      containers:
      - name: update-ssh-authorized-keys
        image: busybox:latest
        securityContext:
          privileged: true
        command:
        - "/bin/sh"
        - "-c"
        - |
          set -o errexit
          set -o xtrace
          umask 0077
          while true
          do
            mkdir -p /mnt/root/.ssh
            rm -f /mnt/root/.ssh/authorized_keys_new
            for key in $(find /mnt/keys -type f); do cat ${key} >> /mnt/root/.ssh/authorized_keys_new; done
            mv /mnt/root/.ssh/authorized_keys_new /mnt/root/.ssh/authorized_keys
            sleep 60s;
          done
        volumeMounts:
        - name: root
          mountPath: /mnt/root
        - name: ssh-keys
          mountPath: /mnt/keys
      volumes:
      - name: root
        hostPath:
          path: /root
      - name: ssh-keys
        configMap:
          name: root-ssh-pubkeys

